#include<stdio.h>
//#include<iostream>
#include<stdlib.h>
#define N 21
//using namespace std;

//统计n个数字x的21次方和
char sum[10][22][22]=
			{
			"000000000000000000000","000000000000000000001","000000000000000000002","000000000000000000003","000000000000000000004","000000000000000000005","000000000000000000006","000000000000000000007","000000000000000000008","000000000000000000009","000000000000000000010","000000000000000000011","000000000000000000012","000000000000000000013","000000000000000000014","000000000000000000015","000000000000000000016","000000000000000000017","000000000000000000018","000000000000000000019","000000000000000000020","000000000000000000021",
			"000000000000000000000","000000000000002097152","000000000000004194304","000000000000006291456","000000000000008388608","000000000000010485760","000000000000012582912","000000000000014680064","000000000000016777216","000000000000018874368","000000000000020971520","000000000000023068672","000000000000025165824","000000000000027262976","000000000000029360128","000000000000031457280","000000000000033554432","000000000000035651584","000000000000037748736","000000000000039845888","000000000000041943040","000000000000044040192",
			"000000000000000000000","000000000010460353203","000000000020920706406","000000000031381059609","000000000041841412812","000000000052301766015","000000000062762119218","000000000073222472421","000000000083682825624","000000000094143178827","000000000104603532030","000000000115063885233","000000000125524238436","000000000135984591639","000000000146444944842","000000000156905298045","000000000167365651248","000000000177826004451","000000000188286357654","000000000198746710857","000000000209207064060","000000000219667417263",
			"000000000000000000000","000000004398046511104","000000008796093022208","000000013194139533312","000000017592186044416","000000021990232555520","000000026388279066624","000000030786325577728","000000035184372088832","000000039582418599936","000000043980465111040","000000048378511622144","000000052776558133248","000000057174604644352","000000061572651155456","000000065970697666560","000000070368744177664","000000074766790688768","000000079164837199872","000000083562883710976","000000087960930222080","000000092358976733184",
			"000000000000000000000","000000476837158203125","000000953674316406250","000001430511474609375","000001907348632812500","000002384185791015625","000002861022949218750","000003337860107421875","000003814697265625000","000004291534423828125","000004768371582031250","000005245208740234375","000005722045898437500","000006198883056640625","000006675720214843750","000007152557373046875","000007629394531250000","000008106231689453125","000008583068847656250","000009059906005859375","000009536743164062500","000010013580322265625",
			"000000000000000000000","000021936950640377856","000043873901280755712","000065810851921133568","000087747802561511424","000109684753201889280","000131621703842267136","000153558654482644992","000175495605123022848","000197432555763400704","000219369506403778560","000241306457044156416","000263243407684534272","000285180358324912128","000307117308965289984","000329054259605667840","000350991210246045696","000372928160886423552","000394865111526801408","000416802062167179264","000438739012807557120","000460675963447934976",
			"000000000000000000000","000558545864083284007","001117091728166568014","001675637592249852021","002234183456333136028","002792729320416420035","003351275184499704042","003909821048582988049","004468366912666272056","005026912776749556063","005585458640832840070","006144004504916124077","006702550368999408084","007261096233082692091","007819642097165976098","008378187961249260105","008936733825332544112","009495279689415828119","010053825553499112126","010612371417582396133","011170917281665680140","011729463145748964147",
			"000000000000000000000","009223372036854775808","018446744073709551616","027670116110564327424","036893488147419103232","046116860184273879040","055340232221128654848","064563604257983430656","073786976294838206464","083010348331692982272","092233720368547758080","101457092405402533888","110680464442257309696","119903836479112085504","129127208515966861312","138350580552821637120","147573952589676412928","156797324626531188736","166020696663385964544","175244068700240740352","184467440737095516160","193690812773950291968",
			"000000000000000000000","109418989131512359209","218837978263024718418","328256967394537077627","437675956526049436836","547094945657561796045","656513934789074155254","765932923920586514463","875351913052098873672","984770902183611232881" };


//10个大数字相加
void add(char *a0, char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, char *a9, char *ans)
{
	int k0[22] = { 0 }, k1[22] = { 0 }, k2[22] = { 0 }, k3[22] = { 0 }, k4[22] = { 0 }, k5[22] = { 0 }, k6[22] = { 0 }, k7[22] = { 0 }, k8[22] = { 0 }, k9[22] = { 0 };
	int p = 20;
	for (int q = 0; q < 21; q++)
	{
		k0[q] = a0[p]-'0';
		k1[q] = a1[p]-'0';
		k2[q] = a2[p]-'0';
		k3[q] = a3[p]-'0';
		k4[q] = a4[p]-'0';
		k5[q] = a5[p]-'0';
		k6[q] = a6[p]-'0';
		k7[q] = a7[p]-'0';
		k8[q] = a8[p]-'0';
		k9[q] = a9[p]-'0';
		p--;
	}
	char *b = new char[22];
	int w = 0; //进位
	for (p = 0; p < 21; p++)
	{
		int temp = w + k0[p] + k1[p] + k2[p] + k3[p] + k4[p] + k5[p] + k6[p] + k7[p] + k8[p] + k9[p];
		w = temp / 10;
		b[p] = temp % 10+'0';
	}
	if (w != 0)
	{
		ans[0] = '0';  //22位，和不是21位数
		ans[1] = '\0';
		return;
	}
	for (p = 20; w < 21; w++)
	{
		ans[w] = b[p--];
	}
	ans[w] = '\0';
	return;
}

//判断枚举时的数字出现次数和ans中数字出现次数是否相同
bool judge(int a0, int a1, int a2, int a3,int a4,int a5, int a6, int a7, int a8, int a9,char *ans)
{
	int time[10] = { 0 }; //统计0~10出现的次数
	for (int i = 0; i < 21; i++)
	{
		time[ans[i]-'0']++;
	}
	if (time[0] == a0 && time[1] == a1 && time[2] == a2 && time[3] == a3 && time[4] == a4 && time[5] == a5 && time[6] == a6 && time[7] == a7
		&& time[8] == a8 && time[9] == a9)
		return true;
	else
		return false;
}

int main()
{
	char ans[22];
	for (int i9 = 0; i9 < 10; i9++)
	{
		for (int i0 = 0; i0 < 21; i0++)
		{
			if (i0 + i9 == 21)
			{
				add(sum[0][i0], sum[1][0], sum[2][0], sum[3][0], sum[4][0], sum[5][0], sum[6][0], sum[7][0], sum[8][0], sum[9][i9], ans);
				if (ans[0]!= '0' && judge(i0, 0, 0, 0, 0, 0, 0, 0, 0, i9, ans))
				{
					printf("%s", ans);
				}
				break;
			}
			//printf("hellow world\n");
			for (int i1 = 0; i1 < 22; i1++)
			{
				if (i0 + i1 + i9 == 21)
				{
					add(sum[0][i0], sum[1][i1], sum[2][0], sum[3][0], sum[4][0], sum[5][0], sum[6][0], sum[7][0], sum[8][0], sum[9][i9], ans);
					if (ans[0]!='0' && judge(i0, i1, 0, 0, 0, 0, 0, 0, 0, i9, ans))
					{
						printf("%s\n", ans);
					}
					break;
				}
				for (int i2 = 0; i2 < 22; i2++)
				{
					if (i0 + i1 + i2 + i9 == 21)
					{
						add(sum[0][i0], sum[1][i1], sum[2][i2], sum[3][0], sum[4][0], sum[5][0], sum[6][0], sum[7][0], sum[8][0], sum[9][i9], ans);
						if (ans[0]!='0' && judge(i0, i1, i2, 0, 0, 0, 0, 0, 0, i9, ans))
						{
							printf("%s\n", ans);
						}
						break;
					}
					for (int i3 = 0; i3 < 22; i3++)
					{
						if (i0 + i1 + i2 + i3 + i9 == 21)
						{
							add(sum[0][i0], sum[1][i1], sum[2][i2], sum[3][i3], sum[4][0], sum[5][0], sum[6][0], sum[7][0], sum[8][0], sum[9][i9], ans);
							if (ans[0]!= '0' && judge(i0, i1, i2, i3, 0, 0, 0, 0, 0, i9, ans))
							{
								printf("%s\n", ans);
							}
							break;
						}
						for (int i4 = 0; i4 < 22; i4++)
						{
							if (i0 + i1 + i2 + i3 + i4 + i9 == 21)
							{
								add(sum[0][i0], sum[1][i1], sum[2][i2], sum[3][i3], sum[4][i4], sum[5][0], sum[6][0], sum[7][0], sum[8][0], sum[9][i9], ans);
								if (ans[0]!= '0' && judge(i0, i1, i2, i3, i4, 0, 0, 0, 0, i9, ans))
								{
									printf("%s\n", ans);
								}
								break;
							}
							for (int i5 = 0; i5 < 22; i5++)
							{
								if (i0 + i1 + i2 + i3 + i4 + i5 + i9 == 21)
								{
									add(sum[0][i0], sum[1][i1], sum[2][i2], sum[3][i3], sum[4][i4], sum[5][i5], sum[6][0], sum[7][0], sum[8][0], sum[9][i9], ans);
									if (ans[0]!= '0' && judge(i0, i1, i2, i3, i4, i5, 0, 0, 0, i9, ans))
									{
										printf("%s\n", ans);
									}
									break;
								}
								for (int i6 = 0; i6 < 22; i6++)
								{
									if (i0 + i1 + i2 + i3 + i4 + i5 + i6 + i9 == 21)
									{
										add(sum[0][i0], sum[1][i1], sum[2][i2], sum[3][i3], sum[4][i4], sum[5][i5], sum[6][i6], sum[7][0], sum[8][0], sum[9][i9], ans);
										if (ans[0]!='0' && judge(i0, i1, i2, i3, i4, i5, i6, 0, 0, i9, ans))
										{
											printf("%s\n", ans);
										}
										break;
									}
									for (int i7 = 0; i7 < 22; i7++)
									{
										if (i0 + i1 + i2 + i3 + i4 + i5 + i6 + i7 + i9 == 21)
										{
											add(sum[0][i0], sum[1][i1], sum[2][i2], sum[3][i3], sum[4][i4], sum[5][i5], sum[6][i6], sum[7][i7], sum[8][0], sum[9][i9], ans);
											if (ans[0]!='0' && judge(i0, i1, i2, i3, i4, i5, i6, i7, 0, i9, ans))
											{
												printf("%s\n", ans);
											}
											break;
										}
										for (int i8 = 0; i8 < 22; i8++)
										{
											if (i0 + i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 == 21)
											{
												add(sum[0][i0], sum[1][i1], sum[2][i2], sum[3][i3], sum[4][i4], sum[5][i5], sum[6][i6], sum[7][i7], sum[8][i8], sum[9][i9], ans);
												if (ans[0]!='0' && judge(i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, ans))
												{
													printf("%s\n", ans);
												}
												break;
											}
										}//8
									}//7
								}//6
							}//5
						}//4
					}//3
				}//2
			}//1
		}//0
	}//9
	system("pause");
	return 0;
}

