/*标题：蚂蚁感冒

长100厘米的细长直杆子上有n只蚂蚁。它们的头有的朝左，有的朝右。

每只蚂蚁都只能沿着杆子向前爬，速度是1厘米/秒。

当两只蚂蚁碰面时，它们会同时掉头往相反的方向爬行。

这些蚂蚁中，有1只蚂蚁感冒了。并且在和其它蚂蚁碰面时，会把感冒传染给碰到的蚂蚁。

请你计算，当所有蚂蚁都爬离杆子时，有多少只蚂蚁患上了感冒。


【数据格式】

第一行输入一个整数n (1 < n < 50), 表示蚂蚁的总数。

接着的一行是n个用空格分开的整数 Xi (-100 < Xi < 100), Xi的绝对值，表示蚂蚁离开杆子左边端点的距离。正值表示头朝右，
负值表示头朝左，数据中不会出现0值，也不会出现两只蚂蚁占用同一位置。其中，第一个数据代表的蚂蚁感冒了。

要求输出1个整数，表示最后感冒蚂蚁的数目。

例如，输入：
3
5 -2 8
程序应输出：
1

再例如，输入：
5
-10 8 -20 12 25
程序应输出：
3
*/

#include<iostream>
#include<stdlib.h>
#include<math.h>
using namespace std;

int main()
{
	int i, a[100], sum , N;
	cin >> N;
	for (i = 1; i <= N; i++)
	{
		cin >> a[i]; 
	}
	int z = 0;
	if (a[1] > 0)			//如果开始向右走，那么只有在它前面也向右走和在它左边向左走的不会被传染
	{
		for (i = 2; i <= N; i++)
		{
			if ((a[i] > 0 && a[i] > a[1])||(a[i]<0 && (-a[i])<a[1]))
			{
				z++;
			}
		}
	}
	if (a[1] < 0)
	{
		for (i = 2; i <= N; i++)
		{
			if ((a[i] < 0 && a[i] > a[1]) || (a[i]>0 && a[i]>(-a[1])))
			{
				z++;
			}
		}
	}
	sum = N - z;
	cout << sum << endl;
	system("pause");
	return 0;
}